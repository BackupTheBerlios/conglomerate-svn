<!- Copyright (c) Microsoft Corporation. All rights reserved. -->
<HTML DIR="LTR">

<HEAD>
	<TITLE>OGRE Application Wizard</TITLE>
	<META NAME="vs_targetSchema" CONTENT="http://schemas.microsoft.com/intellisense/ie5">
	<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
	<META HTTP-EQUIV="MSThemeCompatible" CONTENT="Yes">
	<LINK ID="LINKURL" REL="stylesheet" HREF="../../1033/NewStyles.css">

<SCRIPT>
// CODE FOR COOKIES FROM OREILLY : http://examples.oreilly.de/english_examples/jscript2/15.1.txt

// The constructor function: creates a cookie object for the specified
// document, with a specified name and optional attributes.
// Arguments:
//   document: the Document object that the cookie is stored for. Required.
//   name:     a string that specifies a name for the cookie. Required.
//   hours:    an optional number that specifies the number of hours from now
//             that the cookie should expire.
//   path:     an optional string that specifies the cookie path attribute.
//   domain:   an optional string that specifies the cookie domain attribute.
//   secure:   an optional Boolean value that, if true, requests a secure cookie.
//
function Cookie(document, name, hours, path, domain, secure)
{
    // All the predefined properties of this object begin with '$'
    // to distinguish them from other properties which are the values to
    // be stored in the cookie.	
    this.$document = document;
    this.$name = name;
    if (hours)
        this.$expiration = new Date((new Date()).getTime() + hours*3600000);
    else this.$expiration = null;
    if (path) this.$path = path; else this.$path = null;
    if (domain) this.$domain = domain; else this.$domain = null;
    if (secure) this.$secure = true; else this.$secure = false;
}
// This function is the store() method of the Cookie object.
function _Cookie_store()
{
    // First, loop through the properties of the Cookie object and
    // put together the value of the cookie. Since cookies use the
    // equals sign and semicolons as separators, we'll use colons
    // and ampersands for the individual state variables we store 
    // within a single cookie value. Note that we escape the value
    // of each state variable, in case it contains punctuation or other
    // illegal characters.
    var cookieval = "";
    for(var prop in this) {
        // Ignore properties with names that begin with '$' and also methods.
        if ((prop.charAt(0) == '$') || ((typeof this[prop]) == 'function')) 
            continue;
        if (cookieval != "") cookieval += '&';
        cookieval += prop + ':' + escape(this[prop]);
    }
    // Now that we have the value of the cookie, put together the 
    // complete cookie string, which includes the name, and the various
    // attributes specified when the Cookie object was created.
    var cookie = this.$name + '=' + cookieval;
    if (this.$expiration)
        cookie += '; expires=' + this.$expiration.toGMTString();
    if (this.$path) cookie += '; path=' + this.$path;
    if (this.$domain) cookie += '; domain=' + this.$domain;
    if (this.$secure) cookie += '; secure';
    // Now store the cookie by setting the magic Document.cookie property.
    this.$document.cookie = cookie;
}
// This function is the load() method of the Cookie object.
function _Cookie_load()
{
    // First, get a list of all cookies that pertain to this document.
    // We do this by reading the magic Document.cookie property.
    var allcookies = this.$document.cookie;
    if (allcookies == "") return false;
    // Now extract just the named cookie from that list.
    var start = allcookies.indexOf(this.$name + '=');
    if (start == -1) return false;   // cookie not defined for this page.
    start += this.$name.length + 1;  // skip name and equals sign.
    var end = allcookies.indexOf(';', start);
    if (end == -1) end = allcookies.length;
    var cookieval = allcookies.substring(start, end);
    // Now that we've extracted the value of the named cookie, we've
    // got to break that value down into individual state variable 
    // names and values. The name/value pairs are separated from each
    // other with ampersands, and the individual names and values are
    // separated from each other with colons. We use the split method
    // to parse everything.
    var a = cookieval.split('&');  // break it into array of name/value pairs
    for(var i=0; i < a.length; i++)  // break each pair into an array
        a[i] = a[i].split(':');
    // Now that we've parsed the cookie value, set all the names and values
    // of the state variables in this Cookie object. Note that we unescape()
    // the property value, because we called escape() when we stored it.
    for(var i = 0; i < a.length; i++) {
        this[a[i][0]] = unescape(a[i][1]);
    }
    // We're done, so return the success code.
    return true;
}
// This function is the remove() method of the Cookie object.
function _Cookie_remove()
{
    var cookie;
    cookie = this.$name + '=';
    if (this.$path) cookie += '; path=' + this.$path;
    if (this.$domain) cookie += '; domain=' + this.$domain;
    cookie += '; expires=Fri, 02-Jan-1970 00:00:00 GMT';
    this.$document.cookie = cookie;
}
// Create a dummy Cookie object, so we can use the prototype object to make
// the functions above into methods.
new Cookie();
Cookie.prototype.store = _Cookie_store;
Cookie.prototype.load = _Cookie_load;
Cookie.prototype.remove = _Cookie_remove;

// cookie for whole document
var cookieData;

	cookieData = new Cookie(document, "last_settings", 24*365*10);

	// if cookie doesn't exist or is invalid, create it.
	if (!cookieData.load() || !cookieData.name) {
		cookieData.name = "last_settings";
	}

	// store a default value for first session
	if (cookieData.min_app == null) { cookieData.min_app="false"; cookieData.store();}
	if (cookieData.standard_app == null) { cookieData.standard_app="true"; cookieData.store();}
	if (cookieData.empty_project == null) { cookieData.empty_project="false"; cookieData.store();}
	if (cookieData.framework_yes == null) { cookieData.framework_yes="true"; cookieData.store();}
	if (cookieData.framework_own == null) { cookieData.framework_own="false"; cookieData.store();}
	if (cookieData.cegui_yes == null) { cookieData.cegui_yes="false"; cookieData.store();}
	if (cookieData.location_samples == null) { cookieData.location_samples="true"; cookieData.store();}
	if (cookieData.location_other == null) { cookieData.location_other="false"; cookieData.store();}
	if (cookieData.location_ogrenew == null) { cookieData.location_ogrenew="false"; cookieData.store();}
	if (cookieData.location_envvar == null) { cookieData.location_envvar="false"; cookieData.store();}
	if (cookieData.postbuild_copy == null) { cookieData.postbuild_copy="true"; cookieData.store();}
	if (cookieData.skip_config == null) { cookieData.skip_config="false"; cookieData.store();}
	if (cookieData.ogre_folder == null) { cookieData.ogre_folder="C:\\ogrenew"; cookieData.store();}

        document.write("<SYMBOL NAME='SAFE_PROJECT_IDENTIFIER_NAME' TYPE='text'></SYMBOL>\n");
		document.write("<SYMBOL NAME='UPPER_CASE_SAFE_PROJECT_IDENTIFIER_NAME' TYPE='text'></SYMBOL>\n");
		document.write("<SYMBOL NAME='MIN_APP' TYPE='checkbox' VALUE='" + cookieData.min_app + "'></SYMBOL>\n");
		document.write("<SYMBOL NAME='STANDARD_APP' TYPE='checkbox' VALUE='" + cookieData.standard_app + "'></SYMBOL>\n");
		document.write("<SYMBOL NAME='EMPTY_PROJECT' TYPE='checkbox' VALUE='" + cookieData.empty_project + "'></SYMBOL>\n");
		document.write("<SYMBOL NAME='FRAMEWORK_YES' TYPE='checkbox' VALUE='" + cookieData.framework_yes + "'></SYMBOL>\n");
		document.write("<SYMBOL NAME='FRAMEWORK_OWN' TYPE='checkbox' VALUE='" + cookieData.framework_own + "'></SYMBOL>\n");
		document.write("<SYMBOL NAME='CEGUI_YES' TYPE='checkbox' VALUE='" + cookieData.cegui_yes + "'></SYMBOL>\n");
		document.write("<SYMBOL NAME='STATEMANAGER_YES' TYPE='checkbox' VALUE='false'></SYMBOL>\n");
		document.write("<SYMBOL NAME='LOCATION_SAMPLES' TYPE='checkbox' VALUE='" + cookieData.location_samples + "'></SYMBOL>\n");
		document.write("<SYMBOL NAME='LOCATION_OTHER' TYPE='checkbox' VALUE='" + cookieData.location_other + "'></SYMBOL>\n");
		document.write("<SYMBOL NAME='LOCATION_OGRENEW' TYPE='checkbox' VALUE='" + cookieData.location_ogrenew + "'></SYMBOL>\n");
		document.write("<SYMBOL NAME='LOCATION_ENVVAR' TYPE='checkbox' VALUE='" + cookieData.location_envvar + "'></SYMBOL>\n");
		document.write("<SYMBOL NAME='PRE_COMPILED_HEADER' TYPE='checkbox' VALUE='false'></SYMBOL>\n");
		document.write("<SYMBOL NAME='POSTBUILD_COPY' TYPE='checkbox' VALUE='" + cookieData.postbuild_copy + "'></SYMBOL>\n");
		document.write("<SYMBOL NAME='SKIP_CONFIG' TYPE='checkbox' VALUE='" + cookieData.skip_config + "'></SYMBOL>\n");
		document.write("<SYMBOL NAME='YEAR' TYPE='text'></SYMBOL>\n");
		document.write("<SYMBOL NAME='OGRE_FOLDER' TYPE='text' VALUE='" + cookieData.ogre_folder + "'></SYMBOL>\n");
		</SCRIPT>
</HEAD>

<BODY BGCOLOR="BUTTONFACE" TOPMARGIN="0" LEFTMARGIN="0" RIGHTMARGIN="0" BOTTOMMARGIN="0" ONLOAD="InitDocument(document);" ONKEYDOWN="if (!bValidating) OnKey();" ONKEYPRESS="if (!bValidating) OnPress();">

<TABLE CLASS="ONE" HEIGHT="100%" WIDTH="100%" BORDER="0" CELLPADDING="0" CELLSPACING="0">
<COL CLASS="LinkPane"><COL>

  <!--OPEN OF INTRODUCTORY INFORMATION TABLE//-->
  <TR VALIGN="TOP">
	<TD HEIGHT="79" WIDTH="100%" COLSPAN="2">
	 <TABLE CLASS="TWO" BORDER="0" CELLPADDING="0" CELLSPACING="0">
	 <COL WIDTH="12"><COL><COL WIDTH="12">
	  <TR>
	   <TD VALIGN="TOP" HEIGHT="12" WIDTH="12">
	  	&nbsp;
	   </TD>

	   <TD VALIGN="TOP" HEIGHT="12">
	  	&nbsp;
	   </TD>

	   <TD VALIGN="TOP" HEIGHT="12" WIDTH="12">
	  	&nbsp;
	   </TD>

	   <TD CLASS="IMAGE" VALIGN="BOTTOM" WIDTH="110" ROWSPAN="2">
		<DIV CLASS="SMALLA" ID="Layer0">
		 <IMG CLASS="SMALLEST" SRC="../../Images/OgreAppWizard80.png" WIDTH="50" HEIGHT="50" ALT="" BORDER="0">
		</DIV>
	   </TD>

	   <TD VALIGN="TOP" HEIGHT="12" WIDTH="6" ROWSPAN="2">
	  	&nbsp;
	   </TD>
	  </TR>

	  <TR>
	   <TD VALIGN="TOP" HEIGHT="65" WIDTH="12">
	  	&nbsp;
	   </TD>

	   <TD VALIGN="TOP" HEIGHT="65">
		<H4 CLASS="HEAD" ID="HEAD">Welcome to the OGRE Application Wizard</H4>
		<P CLASS="SUBHEAD" ID="SUBHEAD">This wizard generates a generic OGRE application project. The project can be a Windows application, a console application, a DLL, or a static library.</P>
	   </TD>

	   <TD VALIGN="TOP" HEIGHT="65" WIDTH="12">
	  	&nbsp;
	   </TD>
	  </TR>

	  <TR>
	   <TD VALIGN="TOP" CLASS="RULE" COLSPAN="5" HEIGHT="2">
		<TABLE BORDER="0" WIDTH="100%" HEIGHT="1" CELLPADDING="0" CELLSPACING="0">
	  	 <TR VALIGN="TOP">
	  	  <TD HEIGHT="1" WIDTH="100%" BGCOLOR="BUTTONSHADOW"></TD>
	  	  <TD HEIGHT="1" WIDTH="1" BGCOLOR="WINDOW"></TD>
	  	 </TR>
		</TABLE>
	   </TD>
	  </TR>
	 </TABLE>
	</TD>
  </TR>
  <!--CLOSE OF INTRODUCTORY INFORMATION TABLE//-->

  <!--OPEN OF NAVIGATION, CONTENT, AND BUTTON TABLES//-->
  <TR VALIGN="TOP">
	<TD CLASS="Three" VALIGN="TOP" HEIGHT="100%" WIDTH="100%">
	 <TABLE CLASS="fixedSize" HEIGHT="100%" WIDTH="100%" BORDER="0" CELLPADDING="0" CELLSPACING="0">
  	  <TR VALIGN="TOP">
	   <TD CLASS="threeCustom" VALIGN="TOP">
	   <!--OPEN OF NAVIGATION TABLE//-->

	    <TABLE CLASS="THREE" BORDER="0" CELLPADDING="0" CELLSPACING="0">
		<COL WIDTH="12"><COL><COL WIDTH="1">
		 <TR>
	   	  <TD VALIGN="TOP" COLSPAN="3" HEIGHT="12">
	  		&nbsp;
		  </TD>
		 </TR>
		 <TR>
	   	  <TD VALIGN="TOP" HEIGHT="100%">
	  		&nbsp;
		  </TD>
	   	  <TD VALIGN="TOP" HEIGHT="100%">
	   	  <!--OPEN OF NAVIGATIONAL LINKS//-->

		  	<DIV CLASS="LINKSELECTED">
	 	   	 <SPAN CLASS="VERTLINE1">
			  <IMG SRC="../../Images/spacer.gif" WIDTH="1" HEIGHT="1" ALT="" BORDER="0">
			 </SPAN>
			 <SPAN CLASS="HORILINE1">
			  <TABLE WIDTH="167" HEIGHT="100%" BORDER="0" CELLPADDING="0" CELLSPACING="0">
			   <TR VALIGN="TOP">
			    <TD CLASS="DOTTEDLINE" HEIGHT="1">
				</TD>
			   </TR>
			   <TR VALIGN="TOP">
			    <TD HEIGHT="100%">
				 <IMG SRC="../../Images/spacer.gif" WIDTH="1" HEIGHT="28" ALT="" BORDER="0">
			    </TD>
			   </TR>
			   <TR VALIGN="TOP">
			    <TD CLASS="DOTTEDLINE" HEIGHT="1">
			    </TD>
			   </TR>
			  </TABLE>
			 </SPAN>
			 <TABLE WIDTH="160" HEIGHT="28" BORDER="0" CELLPADDING="0" CELLSPACING="0" CLASS="LINKTEXTSELECTED">
			  <TR VALIGN="MIDDLE">
			   <TD WIDTH="100%">
				<SPAN ID="Default" TITLE="Examine an overview of selections.">Overview</SPAN>
			   </TD>
			   <TD WIDTH="4">
				<IMG SRC="../../Images/spacer.gif" HEIGHT="1" WIDTH="4">
			   </TD>
			  </TR>
			 </TABLE>
			</DIV>

			<DIV CLASS="LINK">
			 <TABLE WIDTH="100%" HEIGHT="28" BORDER="0" CELLPADDING="0" CELLSPACING="0" CLASS="LINKTEXT">
			  <TR VALIGN="MIDDLE">
	  		   <TD WIDTH="100%">
				<SPAN CLASS="ACTIVELINK" ID="AppSettings" TITLE="Specify the type of application you will build with this project and the options or libraries you want supported." onClick="Next(document, 'AppSettings.htm');" TABINDEX="1">Application Settings</SPAN>
			   </TD>
	  		   <TD WIDTH="4">
			  	<IMG SRC="../../Images/spacer.gif" HEIGHT="1" WIDTH="4">
			   </TD>
			  </TR>
			 </TABLE>
			</DIV>

	   	  <!--CLOSE OF NAVIGATIONAL LINKS//-->
		  </TD>
		  <TD WIDTH="1">
		   <DIV CLASS="VERTLINE">
			 <IMG SRC="../../Images/spacer.gif" WIDTH="1" HEIGHT="1" ALT="" BORDER="0">
		   </DIV>
		  </TD>
		 </TR>
		 </TABLE>
		</TD>
	   </TR>
	   </TABLE>

	   <!--CLOSE OF NAVIGATION TABLE//-->
	   </TD>

	   <TD VALIGN="TOP" HEIGHT="100%">
	   <!--OPEN OF CONTENT AND BUTTON TABLE//-->

	   	<TABLE CLASS="ONE" BORDER="0" CELLPADDING="0" CELLSPACING="0">
		<COL WIDTH="100%">
		 <TR VALIGN="TOP">
		  <TD HEIGHT="100%">
	   	  <!--OPEN OF CONTENT//-->

		  	<TABLE CLASS="CONTENT" BORDER="0" CELLPADDING="0" CELLSPACING="0">
			<COL WIDTH="12"><COL WIDTH="398"><COL WIDTH="12">
 			 <TR>
  			  <TD VALIGN="TOP" HEIGHT="12" COLSPAN="3">
  				&nbsp;
  			  </TD>
 			 </TR>
 			 <TR>
 			 <TD VALIGN="TOP" WIDTH="12">
  				&nbsp;
  			  </TD>
  			  <TD VALIGN="TOP">
 				<SPAN CLASS="ItemTextTop" ID="PROJECT_SETTINGS_SPAN">These are the current project settings:</SPAN>
				    <UL>
					    <LI CLASS="LIST">
						    <SPAN CLASS="SideBtnHidden" ID="APPTYPE" TITLE=""><LABEL FOR="APPTYPE"></LABEL></SPAN>
					    <LI CLASS="LIST">
						    <SPAN CLASS="SideBtnHidden" ID="APPLOCATION" TITLE=""><LABEL FOR="APPLOCATION"></LABEL>
						    </SPAN>
					    <LI CLASS="LIST">
						    <SPAN CLASS="SideBtnHidden" ID="APPFRAMEWORK" TITLE=""><LABEL FOR="APPFRAMEWORK"></LABEL>
						    </SPAN>
					    <LI CLASS="LIST">
						    <SPAN CLASS="SideBtnHidden" ID="APPFRAMEWORK_CEGUI" TITLE=""><LABEL FOR="APPFRAMEWORK_CEGUI">
							    </LABEL></SPAN>
					    <LI CLASS="LIST">
						    <SPAN CLASS="SideBtnHidden" ID="APPFRAMEWORK_STATEMANAGER" TITLE=""><LABEL FOR="APPFRAMEWORK_STATEMANAGER">
							    </LABEL></SPAN>
					    <LI CLASS="LIST">
						    <SPAN CLASS="SideBtnHidden" ID="APPPOSTBUILD" TITLE=""><LABEL FOR="APPPOSTBUILD"></LABEL>
						    </SPAN>
					    <LI CLASS="LIST">
						    <SPAN CLASS="SideBtnHidden" ID="APPPCH" TITLE=""><LABEL FOR="APPPCH"></LABEL></SPAN>
					    <LI CLASS="LIST">
						    <SPAN CLASS="SideBtnHidden" ID="SKIPCONFIG" TITLE=""><LABEL FOR="SKIPCONFIG"></LABEL>
						    </SPAN>
					    </LI>
				    </UL>

	  			<SPAN CLASS="ItemText" ID="FinishText">Click <B>Finish</B> from any window to accept the current settings.</SPAN>

				<P CLASS="ElementSpacer2">&nbsp;</P>

               	<SPAN CLASS="ItemText" ID="README_REMINDER" TITLE="">After you create the project, see the project's readme.txt file for information about the project features and files that are generated.</SPAN>
  		  	  </TD>

  		  	  <TD VALIGN="TOP" WIDTH="12">
  				&nbsp;
  		  	  </TD>
 		  	 </TR>
		 	</TABLE>

	   	  <!--CLOSE OF CONTENT//-->
		  </TD>
		 </TR>
		 <TR VALIGN="BOTTOM">
		  <TD HEIGHT="48">
	   	  <!--OPEN OF BUTTON HTML//-->

		  	<TABLE HEIGHT="48" BORDER="0" CELLPADDING="0" CELLSPACING="0">
			<COL WIDTH="12"><COL><COL WIDTH="75"><COL WIDTH="4"><COL WIDTH="75"><COL WIDTH="4"><COL WIDTH="75"><COL WIDTH="12">
			 <TR>
  			  <TD VALIGN="TOP" CLASS="RULE" COLSPAN="8" HEIGHT="2">
				<TABLE BORDER="0" WIDTH="100%" HEIGHT="1" CELLPADDING="0" CELLSPACING="0">
  	 			 <TR VALIGN="TOP">
  	  			  <TD HEIGHT="1" WIDTH="100%" BGCOLOR="BUTTONSHADOW"></TD>
  	  			  <TD HEIGHT="1" WIDTH="1" BGCOLOR="WINDOW"></TD>
  	 			 </TR>
				</TABLE>
  			  </TD>
 			  </TR>

 			  <TR>
  			  <TD VALIGN="TOP" HEIGHT="11" COLSPAN="8">
  				&nbsp;
  			  </TD>
 			 </TR>

 			<TR>
  			  <TD VALIGN="MIDDLE" HEIGHT="23" WIDTH="12">
  				&nbsp;
  			  </TD>
  			  <TD VALIGN="TOP" HEIGHT="23">
  				&nbsp;
  			  </TD>
  			  <TD VALIGN="MIDDLE" HEIGHT="23" WIDTH="75">
  				<BUTTON CLASS="BUTTONS" ID="FinishBtn" onClick="OnFinish(document);">Finish</BUTTON>
  			  </TD>
  			  <TD VALIGN="MIDDLE" HEIGHT="23" WIDTH="4">
  				&nbsp;
  			  </TD>
  			  <TD VALIGN="MIDDLE" HEIGHT="23" WIDTH="75">
  				<BUTTON CLASS="BUTTONS" ID="CancelBtn" onClick="window.external.Finish(document, 'cancel');">Cancel</BUTTON>
  			  </TD>
  			  <TD VALIGN="MIDDLE" HEIGHT="23" WIDTH="4">
  				&nbsp;
  			  </TD>
  			  <TD VALIGN="MIDDLE" HEIGHT="23" WIDTH="75">
  				<BUTTON CLASS="BUTTONS" ID="HelpBtn" onClick="window.external.OnHelp('vc.appwiz.win32.overview');">Help</BUTTON>
  			  </TD>
  			  <TD VALIGN="MIDDLE" HEIGHT="23" WIDTH="12">
  				&nbsp;
  			  </TD>
 			 </TR>

 			 <TR>
  			  <TD VALIGN="TOP" HEIGHT="12" COLSPAN="8">
  				&nbsp;
  			  </TD>
 			 </TR>
			</TABLE>

	   	  <!--CLOSE OF BUTTON HTML//-->
		  </TD>
		 </TR>
		</TABLE>

  	<!--CLOSE OF NAVIGATION, CONTENT, AND BUTTON TABLES//-->
 	</TD>
  </TR>
</TABLE>

</BODY>
</HTML>

<SCRIPT LANGUAGE="JSCRIPT">

var tab_array = new Array();
tab_array[0] = Default;
tab_array[1] = AppSettings;

function InitDocument(document)
{
	setDirection();

	if (window.external.FindSymbol("DOCUMENT_FIRST_LOAD"))
	{
		var L_WizardDialogTitle_Text = "Ogre Application Wizard";
		window.external.AddSymbol("WIZARD_DIALOG_TITLE", L_WizardDialogTitle_Text);
		var strProjName = window.external.FindSymbol("PROJECT_NAME");
		var coll = document.all.tags("SYMBOL");
		var numSymbols = coll.length;
		for (i = 0; i < numSymbols; i++)
		{
			var obj = coll(i);
			if (typeof(obj.VALUE) == "undefined")
			{
				obj.VALUE = getval(obj, strProjName);
			}
		}
		SetLocaleForResources(window.external.GetHostLocale());
		window.external.SetDefaults(document);
	}
	window.external.Load(document);
	InitControls();
}

function InitControls()
{
	var L_APPTYPESTANDARD_TEXT = "Standard OGRE application";
	var L_APPTYPEMIN_TEXT = "Minimal OGRE application";
	var L_APPTYPEEMPTY_TEXT = "Empty OGRE application";
	if (window.external.FindSymbol("EMPTY_PROJECT"))
		APPTYPE.innerText = L_APPTYPEEMPTY_TEXT;
	else
	{
		if (window.external.FindSymbol("STANDARD_APP"))
			APPTYPE.innerText = L_APPTYPESTANDARD_TEXT;
		else
		{
			if (window.external.FindSymbol("MIN_APP"))
			APPTYPE.innerText = L_APPTYPEMIN_TEXT;
		}
	}

	var L_APPLOCATION_TEXT = "Samples folder";
	var L_APPLOCATION_CUSTOM_TEXT = "Fixed path to OGRE root folder";
	var L_APPLOCATION_NEXTO_TEXT = "On same level as OGRE root folder";
	var L_APPLOCATION_ENVVAR_TEXT = "Using 'OGRE_SRC' environment variable.";
	var L_APPFRAMEWORK_TEXT = "Using Common Samples Framework";
	var L_APPFRAMEWORKOWN_TEXT = "Using own Framework"
	var L_APPPOSTBUILD_TEXT = "Postbuild copy";
	var L_APPPCH_TEXT = "Using precompiled header";
	var L_SKIPCONFIG_TEXT = "Skipping Config Dialog";

	if (window.external.FindSymbol("LOCATION_SAMPLES"))
	{
		APPLOCATION.innerText = L_APPLOCATION_TEXT;
	}
	else if (window.external.FindSymbol("LOCATION_OTHER"))
	{
		APPLOCATION.innerText = L_APPLOCATION_CUSTOM_TEXT;
	}
	else if (window.external.FindSymbol("LOCATION_ENVVAR"))
	{
		APPLOCATION.innerText = L_APPLOCATION_ENVVAR_TEXT;
	}
	else if (window.external.FindSymbol("LOCATION_OGRENEW"))
	{
		APPLOCATION.innerText = L_APPLOCATION_NEXTO_TEXT;
	}
	else
	{
		APPLOCATION.parentNode.style.display = 'none';
	}

	if (window.external.FindSymbol("FRAMEWORK_YES") && !window.external.IsSymbolDisabled("FRAMEWORK_YES"))
	{
		APPFRAMEWORK.innerText = L_APPFRAMEWORK_TEXT;
	}
	else if (window.external.FindSymbol("FRAMEWORK_OWN") && !window.external.IsSymbolDisabled("FRAMEWORK_OWN"))
	{
		APPFRAMEWORK.innerText = L_APPFRAMEWORKOWN_TEXT;
	}
	else
	{
		APPFRAMEWORK.parentNode.style.display = 'none';
	}

	if (window.external.FindSymbol("POSTBUILD_COPY"))
	{
		APPPOSTBUILD.innerText = L_APPPOSTBUILD_TEXT;
	}
	else
	{
		APPPOSTBUILD.parentNode.style.display = 'none';
	}


	if (window.external.FindSymbol("SKIP_CONFIG") && !window.external.IsSymbolDisabled("SKIP_CONFIG"))
	{
		SKIPCONFIG.innerText = L_SKIPCONFIG_TEXT;
	}
	else
	{
		SKIPCONFIG.parentNode.style.display = 'none';
	}

	if (window.external.FindSymbol("PRE_COMPILED_HEADER") && !window.external.IsSymbolDisabled("PRE_COMPILED_HEADER"))
	{
		APPPCH.innerText = L_APPPCH_TEXT;
	}
	else
	{
		APPPCH.parentNode.style.display = 'none';
	}

	APPFRAMEWORK_CEGUI.parentNode.style.display = 'none';
	APPFRAMEWORK_STATEMANAGER.parentNode.style.display = 'none';
	if (window.external.FindSymbol("CEGUI_YES") && !window.external.IsSymbolDisabled("CEGUI_YES"))
	{
		var L_CEGUIYES_TEXT = "CEGUI support.";
		APPFRAMEWORK_CEGUI.innerText = L_CEGUIYES_TEXT;
		APPFRAMEWORK_CEGUI.parentNode.style.display = 'block';
	}
	if (window.external.FindSymbol("STATEMANAGER_YES") && !window.external.IsSymbolDisabled("STATEMANAGER_YES"))
	{
		var L_STATEMANGERYES_TEXT = "Statemanager support";
		APPFRAMEWORK_STATEMANAGER.innerText = L_STATEMANGERYES_TEXT;
		APPFRAMEWORK_STATEMANAGER.parentNode.style.display = 'block';

	}
}

function Next(document, linkto)
{
	window.external.Next(document, linkto);
}

function IsLetter(ch)
{
	if (ch >= 'a' && ch <= 'z')
		return true;
	if (ch >= 'A' && ch <= 'Z')
		return true;
	return false;
}

function IsNumber(ch)
{
	if (ch >= '0' && ch <= '9')
		return true;
	return false;
}

function IsValidDirectory(strDirectory)
{
	if (strDirectory.length < 3)
		return false;

	if (IsLetter(strDirectory.charAt(0)) && strDirectory.charAt(1) == ':' && strDirectory.charAt(2) == '\\')
		return true;

	if (strDirectory.charAt(0)=='\\' && strDirectory.charAt(1)=='\\' &&
	    (IsLetter(strDirectory.charAt(2)) || IsNumber(strDirectory.charAt(2))))
		return true;

	return false;
}

function OnFinish(document)
{
	if(window.external.FindSymbol("LOCATION_OTHER"))
	{
		if (!IsValidDirectory(TrimStr(window.external.FindSymbol("OGRE_FOLDER") ) ) )
		{
			L_ErrOgreInvalid_Text = "Invalid OGRE Directory!";
			window.external.ReportError(L_ErrOgreInvalid_Text);
			return;
		}
	}
	OnWizFinish(document);
}

function getval(obj, strProjName)
{
	var SymbolValue = "";
	switch(obj.NAME)
	{
		case "SAFE_PROJECT_IDENTIFIER_NAME":
			SymbolValue	= CreateIdentifierSafeName(strProjName);
			break;
		case "UPPER_CASE_SAFE_PROJECT_IDENTIFIER_NAME":
			{
				var strSafeProjName = CreateSafeName(strProjName);
				SymbolValue = strSafeProjName.toUpperCase();
			}
			break;
		case  "YEAR":
			{
				d = new Date();
				SymbolValue = d.getFullYear().toString();
			}
			break;
		default:
			SymbolValue = "";
			break;
	}
	return (SymbolValue);
}

</SCRIPT>
<SCRIPT ID="INCLUDE_SCRIPT" LANGUAGE="JSCRIPT"></SCRIPT>
<SCRIPT ID="INCLUDE_COMMON" LANGUAGE="JSCRIPT"></SCRIPT>
<SCRIPT>
	document.scripts("INCLUDE_SCRIPT").src = window.external.FindSymbol("SCRIPT_COMMON_PATH") + "/Script.js";
	document.scripts("INCLUDE_COMMON").src = window.external.FindSymbol("SCRIPT_COMMON_PATH") + "/Common.js";
</SCRIPT>
